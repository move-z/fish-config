"$schema" = 'https://starship.rs/config-schema.json'

# add_newline = true
command_timeout = 1000

[aws]
disabled = true

[directory]
format = '[](6)[$path]($style)[](6)[$read_only]($read_only_style) '
style = "fg:white bg:6"
#repo_root_format = '[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[](fg:6)[$read_only]($read_only_style) '
repo_root_format = '[](6)[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[](6)[$read_only]($read_only_style) '
repo_root_style = 'fg:white bold bg:6'
truncation_symbol = "…/"
fish_style_pwd_dir_length = 1

#[git_branch]
#truncation_length = 15
#
#[git_metrics]
#disabled = false

[kubernetes]
disabled = false
#detect_files = ['.k8s']

[[kubernetes.contexts]]
context_pattern = "^pl.*$"
style = "red"
symbol = "☸💡"

# [line_break]
# disabled = true

[memory_usage]
threshold = 90
disabled = false

[status]
disabled = false
format = '[$symbol $status $common_meaning$signal_name]($style) '
pipestatus_format = '\[$pipestatus\] => [$symbol $status $common_meaning$signal_name]($style)'
map_symbol = true
pipestatus = true

[time]
disabled = false
style = 'blue'
time_format = "%R"
format = '[  $time ]($style)'


### jj
# custom module for jj status
[custom.jj]
#ignore_timeout = true
description = "current jj status"
symbol = ""
when = true
shell = "sh"
command = '''
jj root > /dev/null && jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    "🥋",
    change_id.shortest(4),
    bookmarks,
    "|",
    concat(
      if(conflict, "💥"),
      if(divergent, "🚧"),
      if(hidden, "👻"),
      if(immutable, "🔒"),
    ),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ if(description.first_line().len() == 0,
      "(no description set)",
      if(description.first_line().substr(0, 29) == description.first_line(),
        description.first_line(),
        description.first_line().substr(0, 29) ++ "…",
      )
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''

# disable git modules
[git_state]
disabled = true

[git_commit]
disabled = true

[git_metrics]
disabled = true

[git_branch]
disabled = true
truncation_length = 15

# re-enable git modules as long as we're not in a jj repo
[custom.git_state]
when = true
shell = "sh"
command = "jj root >/dev/null 2>&1 || starship module git_state"
description = "Only show git_state if we're not in a jj repo"
[custom.git_commit]
when = true
shell = "sh"
command = "jj root >/dev/null 2>&1 || starship module git_commit"
description = "Only show git_commit if we're not in a jj repo"
[custom.git_metrics]
when = true
shell = "sh"
command = "jj root >/dev/null 2>&1 || starship module git_metrics"
description = "Only show git_metrics if we're not in a jj repo"
[custom.git_branch]
when = true
shell = "sh"
command = "jj root >/dev/null 2>&1 || starship module git_branch"
description = "Only show git_branch if we're not in a jj repo"

